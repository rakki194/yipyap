/* Modal Layout */
@layer modal {
  /* Base Modal Structure */
  .modal-content {
    position: fixed;
    inset: 0;
    display: block;
    overflow: hidden;
    z-index: 10;
  }

  /* Modal Header */
  .modal-header {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    width: 100%;
    height: 3rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0;
    color: var(--accent);
    z-index: 1100;
    font-size: 1rem;
    font-family: monospace;
    text-shadow: -1px -1px 2px #fff, 1px -1px 0 #fff, -1px 1px 0 #fff,
      1px 1px 0 #fff;
    pointer-events: auto;

    @supports (backdrop-filter: blur(10px)) {
      background: transparent;
      backdrop-filter: blur(10px);
    }
  }

  /* Modal Actions */
  .modal-actions {
    display: flex;
    gap: var(--spacing);
    padding: var(--spacing);
    position: relative;
    pointer-events: auto;

    /* Metadata Button */
    .metadata-button {
      transition: background-color 0.2s ease, transform 0.2s ease;

      &.active {
        background-color: var(--accent);
        color: var(--text-on-accent);
        transform: scale(1.1);
      }

      &:hover {
        background-color: color-mix(in srgb, var(--accent) 15%, var(--card-bg));
      }

      &.active:hover {
        background-color: color-mix(in srgb, var(--accent) 85%, var(--card-bg));
      }
    }

    /* Favorite Button */
    .favorite-button {
      transition: all 0.2s ease-out;
      color: var(--accent);
      box-shadow: 0 0 0 transparent;
      transform: translateY(0);

      &:hover {
        transform: translateY(-1px) scale(1.1);
      }

      &:active {
        transform: translateY(1px) scale(1.05);
        box-shadow: 0 0 4px rgba(var(--accent-rgb), 0.5);
      }

      &.favorite-emphasis {
        color: var(--accent);
        box-shadow: 0 2px 4px var(--accent), 0 0 8px var(--accent);
        transform: translateY(-2px) scale(1.1);

        &:hover {
          box-shadow: 0 3px 6px var(--accent), 0 0 12px var(--accent);
          transform: translateY(-3px) scale(1.15);
        }

        &:active {
          transform: translateY(-1px) scale(1.1);
          box-shadow: 0 1px 3px var(--accent), 0 0 6px var(--accent);
        }
      }

      &.favorite-off {
        color: var(--text-muted);
        filter: grayscale(0.8);

        &:hover {
          filter: grayscale(0.5);
        }
      }
    }
  }
}

/* Modal Overlay */
.modal-overlay {
  position: fixed;
  inset: 0;
  background: var(--overlay-bg);
  backdrop-filter: var(--overlay-backdrop);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1100;
  pointer-events: none;  /* Allow events to pass through by default */
}

.modal-overlay > * {
  pointer-events: auto;  /* Re-enable events for modal content */
}

/* Prevent scrolling of underlying content when modal is open */
body.modal-open {
  overflow: hidden;
  height: 100vh;
  position: fixed;
  width: 100%;
}

/* Image Container and Layout */
.modal-body {
  position: relative;
  display: flex;
  align-items: stretch;
  justify-content: flex-start;
  flex-direction: row;
  width: 100%;
  height: 100%;
  overflow: hidden;
  background: var(--preview-bg);
  backdrop-filter: saturate(50%) brightness(0.5) blur(10px);
  pointer-events: auto;

  /* Image Container Styles */
  & > .image-container {
    position: relative;
    flex-shrink: 0;
    overflow: hidden;
    user-select: none;
    -webkit-user-select: none;
    touch-action: none;
    width: 100%;
    height: 100%;

    /* Base Image Styles */
    & > div {
      position: relative;
      width: 100%;
      height: 100%;

      & img {
        object-fit: contain;
        width: 100%;
        height: 100%;
        image-rendering: high-quality;
        pointer-events: none;
      }

      & img.preview {
        opacity: 0;
        z-index: 1;

        &.loaded {
          opacity: 1;
        }
      }

      & img.thumbnail {
        opacity: 1;
        z-index: 0;
      }
    }
  }
}

/* Image Info Panel */
.image-info {
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0;
  z-index: 2;
  padding: var(--spacing);
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  overflow: hidden scroll;
  width: 40rem;
  background: var(--preview-bg);
  backdrop-filter: saturate(50%) brightness(0.5) blur(10px);
  transform: translateX(100%);
  transition: transform 0.3s ease;

  &.focused {
    transform: translateX(0);
  }

  [data-theme="light"] & {
    background: rgb(239 241 245 / 85%);
    backdrop-filter: saturate(100%) brightness(1.1) blur(10px);
  }

  [data-theme="strawberry"] & {
    background: rgb(255 240 243 / 85%);
    backdrop-filter: saturate(100%) brightness(1.1) blur(10px);
  }

  /* Metadata Table Styles */
  & > .metadata-table {
    border-radius: 1px;
    border-collapse: collapse;
    overflow: hidden;

    & > tbody > tr > td:first-child {
      display: flex;
      align-items: center;
      gap: var(--half-spacing);
      padding-inline-end: var(--spacing);
    }
  }

  /* Caption Editor Styles */
  & > .caption-editor {
    display: flex;
    flex-direction: column;
    gap: var(--spacing);
    flex: 1;
    overflow: hidden;
    padding-top: var(--quad-spacing);

    /* Caption Input Wrapper */
    & > .caption-input-wrapper {
      position: relative;
      display: flex;
      flex-direction: row;
      align-items: flex-start;
      gap: var(--spacing);
      transition-property: flex;
      flex: 1 1 min-content;
      max-height: 20rem;
      min-height: 10rem;

      &.collapsed {
        flex-grow: 0;
      }

      &.expanded {
        flex-shrink: 0;
      }

      & > * {
        max-height: 100%;
      }

      & > textarea {
        flex: 1;
        resize: none;
        height: 100%;
        min-height: 100%;
        max-height: unset;
      }

      & > .caption-icons {
        display: flex;
        align-items: center;
        flex-direction: column;
        gap: var(--spacing);
        flex: 0 0 auto;
        overflow-y: scroll;
        scrollbar-width: none;
      }
    }
  }
}

/* Generate Tags Button Styles */
.generate-tags-button {
  display: flex;
  align-items: center;
  gap: var(--spacing);
  padding: var(--spacing);
  margin: 0;
  background: var(--card-bg);
  border: none;
  cursor: pointer;
  color: var(--text-primary);
  font-size: 1rem;
  transition: all 0.2s ease;
  width: 100%;
  text-align: left;

  &:hover,
  .dropdown-content &:hover {
    background: color-mix(in srgb, var(--accent) 15%, var(--card-bg));
    border-color: var(--accent);
    color: var(--accent);
  }

  &:active,
  .dropdown-content &:active {
    background: color-mix(in srgb, var(--accent) 25%, var(--card-bg));
  }

  .icon {
    opacity: 0.7;
    transition: opacity 0.2s ease;
  }

  &:hover .icon {
    opacity: 1;
  }
}

/* Delete Button Styles */
.delete-button {
  position: relative;
  overflow: hidden;
  color: var(--error);
  transition: color 0.2s ease;

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: var(--progress, 0%);
    height: 100%;
    background: rgb(220 38 38);
    opacity: 0;
    transition-property: opacity;
    z-index: -1;
  }

  &.holding {
    color: white;
    background: transparent;
    animation: pulse 0.75s ease-in-out infinite;
    box-shadow: 0 0 8px rgb(220 38 38 / 50%);

    &::before {
      opacity: 1;
    }

    svg {
      fill: var(--accent);
    }
  }
}

.delete-button:hover {
  color: color-mix(in srgb, var(--error) 85%, black);
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.05);
  }

  100% {
    transform: scale(1);
  }
}

.generate-tags-dropdown {
  position: absolute;
  top: 100%;
  right: 0;
  background: var(--surface);
  border-radius: var(--radius);
  box-shadow: var(--shadow);
  display: flex;
  flex-direction: column;
  padding: 0.5rem;
  gap: 0.5rem;
  z-index: 1000;
}

.generate-tags-dropdown button {
  background: none;
  border: none;
  padding: 0.5rem 1rem;
  cursor: pointer;
  text-align: left;
  border-radius: var(--radius);
}

.generate-tags-dropdown button:hover {
  background: var(--hover);
}

/* Metadata Bubble Styling */
.metadata-bubble {
  position: absolute;
  top: calc(var(--spacing) * 4);
  right: var(--spacing);
  background: var(--bg-color);
  border-radius: var(--border-radius);
  box-shadow: var(--shadow-default);
  padding: var(--spacing);
  min-width: 280px;
  max-width: 400px;
  z-index: 1000;
  animation: metadata-popup 0.2s ease-out;
  transform-origin: top right;
  border: 1px solid var(--border-color);

  & .metadata-table {
    width: 100%;
    border-spacing: 0;
    border-collapse: collapse;

    & td {
      padding: var(--half-spacing);
      border-bottom: 1px solid var(--border-color);
    }

    & td:first-child {
      font-weight: 500;
      color: var(--text-secondary);
      white-space: nowrap;
    }

    & td:last-child {
      color: var(--text-primary);
    }

    & tr:last-child td {
      border-bottom: none;
    }
  }
}

@keyframes metadata-popup {
  from {
    opacity: 0;
    transform: translateY(-8px) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

.metadata-bubble::before {
  content: '';
  position: absolute;
  top: -6px;
  right: 12px;
  width: 10px;
  height: 10px;
  background: var(--bg-color);
  border-left: 1px solid var(--border-color);
  border-top: 1px solid var(--border-color);
  transform: rotate(45deg);
}

/* Add zoom indicator */
.image-container::after {
  content: attr(data-zoom);
  position: absolute;
  bottom: 1rem;
  left: 1rem;
  background: rgba(0, 0, 0, 0.5);
  color: white;
  padding: 0.25rem 0.5rem;
  border-radius: 0.25rem;
  font-size: 0.875rem;
  opacity: 0;
  transition: opacity 0.2s;
  pointer-events: none;
}

.image-container[data-zoom]:hover::after {
  opacity: 1;
}

/* Minimap styles */
.image-container .minimap {
  position: absolute;
  top: 5rem;
  left: 1rem;
  width: 150px;
  height: 100px;
  background: rgba(0, 0, 0, 0.5);
  border: 1px solid rgba(255, 255, 255, 0.3);
  border-radius: 4px;
  overflow: hidden;
  opacity: 0;
  transition: opacity 0.2s ease;
  pointer-events: auto;
  cursor: pointer;
}

.image-container .minimap img {
  width: 100%;
  height: 100%;
  object-fit: contain;
  position: relative;
  z-index: 0;
}

.image-container .minimap .viewport {
  position: absolute;
  border: 1px solid var(--accent, #fff);
  background: transparent;
  pointer-events: none;
  z-index: 2;
  filter: drop-shadow(0 0 2px rgba(255, 255, 255, 0.3));
  background: rgba(255, 255, 255, 0.05);
}

/* Move the darkening overlay between the image and viewport */
.image-container .minimap .overlay {
  content: '';
  position: absolute;
  inset: 0;
  background: rgba(0, 0, 0, 0.4);
  backdrop-filter: blur(1px);
  z-index: 1;
  /* Fix the clip-path to ensure a properly closed shape */
  clip-path: polygon(
    /* Outer shape */
    0 0,
    100% 0,
    100% 100%,
    0 100%,
    0 0,
    /* Inner cutout - make sure to close the shape */
    var(--viewport-left) var(--viewport-top),
    var(--viewport-left) var(--viewport-bottom),
    var(--viewport-right) var(--viewport-bottom),
    var(--viewport-right) var(--viewport-top),
    var(--viewport-left) var(--viewport-top)
  );
}

/* Show minimap when zoomed and hovered */
.image-container[data-zoom]:hover .minimap {
  opacity: 1;
}

/* Update existing zoom indicator styles for consistency */
.image-container .zoom-indicator {
  position: absolute;
  bottom: 1rem;
  left: 1rem;
  background: rgba(0, 0, 0, 0.5);
  color: white;
  padding: 0.25rem 0.5rem;
  border-radius: 0.25rem;
  font-size: 0.875rem;
  opacity: 0;
  transition: opacity 0.2s;
  pointer-events: none;
}

.image-container[data-zoom]:hover .zoom-indicator {
  opacity: 1;
}

/* Add to existing styles */
.empty-captions-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: var(--spacing);
  padding: var(--spacing);
  text-align: center;
  min-height: 200px;
}

.empty-state-image {
  width: 512px;
  height: 512px;
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
  image-rendering: pixelated;
  image-rendering: crisp-edges;
  -ms-interpolation-mode: nearest-neighbor;
  opacity: 0.7;
  filter: invert(1);
  margin-bottom: var(--spacing);
  
  [data-theme="light"] &,
  [data-theme="strawberry"] & {
    filter: invert(0);
  }
}

.empty-state-message {
  color: var(--text-primary);
  font-size: 1.1rem;
  margin: var(--spacing) 0;
  opacity: 0.8;
}

.caption-creation {
  position: relative;
  display: inline-block;
}

.caption-type-dropdown {
  position: absolute;
  top: 100%;
  left: 50%;
  transform: translateX(-50%);
  margin-top: 0.5rem;
  min-width: 150px;
  z-index: 1090;
  background: var(--bg-color);
  box-shadow: var(--shadow-default);
  border: 1px solid var(--border-color);
  padding: var(--spacing);
}

.caption-type-option {
  display: flex;
  align-items: center;
  gap: var(--half-spacing);
  width: 100%;
  padding: var(--half-spacing);
  border: none;
  background: none;
  color: var(--text-primary);
  cursor: pointer;
  transition: background-color 0.2s;
}

.caption-type-option:hover {
  background-color: var(--hover-bg);
}

.primary-button {
  padding: var(--half-spacing) var(--spacing);
  border-radius: var(--border-radius);
  border: none;
  background-color: var(--primary);
  color: var(--text-on-primary);
  cursor: pointer;
  transition: background-color 0.2s;
}

.primary-button:hover {
  background-color: var(--primary-hover);
}

.caption-type-dropdown {
  min-width: 20rem;
}

/* Add background and shadow for dropdown cards */
.caption-type-dropdown.card,
.generate-tags-dropdown.card {
  background: var(--bg-color);
  box-shadow: var(--shadow-default);
  border: 1px solid var(--border-color);
  padding: var(--spacing);
  z-index: 1100;
}

/* Add hover effects for dropdown buttons */
.caption-type-dropdown button:hover,
.generate-tags-dropdown button:hover {
  background: var(--secondary-bg);
  color: var(--accent);
}

.caption-creation button {
  display: inline-flex;
  gap: var(--spacing);
  padding: var(--spacing);
  background: var(--card-bg);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  color: var(--text-primary);
  cursor: pointer;
  width: 100%;
  transition-property: background-color, border-color, color;
  justify-content: flex-start;
  align-items: center;
}

.caption-creation button:hover {
  background: var(--secondary-bg);
  border-color: var(--accent);
  color: var(--accent);
}

.caption-creation button .icon {
  opacity: 0.7;
  transition: opacity 0.2s ease;
}

.caption-creation button:hover .icon {
  opacity: 1;
}

/* Make the textarea take full height and remove scroll bars on focus */
.image-info .caption-editor .caption-input-wrapper > textarea:focus {
  height: 100%;
  flex-grow: 1;
}

/* Metadata Panel Styling */
.metadata-panel {
  position: absolute;
  right: 0;
  top: calc(var(--spacing) * 4);
  background: var(--bg-color);
  border-radius: var(--border-radius);
  box-shadow: var(--shadow-default);
  padding: var(--spacing);
  width: 280px;
  z-index: 1000;
  animation: slide-in 0.2s ease-out;
  border: 1px solid var(--border-color);
  margin: var(--spacing);

  & .metadata-table {
    width: 100%;
    border-spacing: 0;
    border-collapse: collapse;

    & td {
      padding: var(--half-spacing);
      border-bottom: 1px solid var(--border-color);
    }

    & td:first-child {
      font-weight: 500;
      color: var(--text-secondary);
      white-space: nowrap;
      display: flex;
      align-items: center;
      gap: var(--half-spacing);

      & .icon {
        opacity: 0.7;
      }
    }

    & td:last-child {
      color: var(--text-primary);
    }

    & tr:last-child td {
      border-bottom: none;
    }
  }
}

@keyframes slide-in {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Ensure caption editor is above other elements */
.caption-editor {
  position: relative;
  z-index: 2;
  background: var(--bg-color);
}

/* Ensure caption input wrapper is above other elements */
.caption-input-wrapper {
  position: relative;
  z-index: 2;
  background: var(--bg-color);
}

/* Add overlay for closing dropdowns */
.dropdown-overlay {
  position: fixed;
  inset: 0;
  z-index: 1089;
  background: transparent;
}
