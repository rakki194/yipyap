:root {
  --transition-duration: 0.2s;
  --transition-timing: ease-out;
}

#gallery {
  overflow: hidden;
  display: flex;
  flex-direction: column;

  & > * {
    padding: var(--spacing);
  }

  & > .responsive-grid {
    flex: 1;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: var(--spacing);
    width: 100%;
    container-type: inline-size;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
    overscroll-behavior: contain;
    margin: 0;
    padding: var(--spacing);
  }

  &.crop > .responsive-grid > .item > img {
    object-fit: cover;
  }
}

#gallery > .responsive-grid > .item {
  background-color: var(--card-bg);
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  aspect-ratio: 1;
  overflow: hidden;
  box-shadow: var(--shadow-default);
  transition-property: transform, box-shadow, background-color, color, border, opacity, backdrop-filter;
  transition-duration: var(--transition-duration);
  transition-timing-function: var(--transition-timing);
  opacity: 0;
  transform: scale(0.98);
  animation: fadeIn 0.3s ease-out forwards;
  pointer-events: auto;
  cursor: pointer;

  &:hover,
  &.selected {
    transform: var(--hover-transform);
  }

  &.selected {
    background-color: color-mix(in srgb, var(--card-bg), var(--text-primary) 80%);
    backdrop-filter: blur(10px);
    box-shadow: 4px 8px 8px rgba(0, 0, 0, 0.4);

    & > img {
      filter: var(--focus-pop);
      transform: scale(1.02);
    }

    &:hover {
      background-color: color-mix(in srgb, var(--card-bg), var(--accent) 40%);
      backdrop-filter: blur(15px);
      box-shadow: 6px 12px 12px rgba(0, 0, 0, 0.5);
      
      & > img {
        transform: scale(1.08);
        filter: var(--focus-pop) brightness(1.1);
      }
    }
  }

  &:hover {
    transform: var(--hover-transform);
    box-shadow: var(--shadow-hover);

    &:not(.selected) {
      background-color: color-mix(in srgb, var(--card-bg), var(--text-primary) 10%);
    }

    &.image > .overlay {
      opacity: 1;
    }

    & > img {
      transform: scale(1.05);
    }
  }

  &::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0;
    box-shadow: inset 0 0 0 0 var(--accent);
    transition-property: box-shadow;
  }

  &.selected::after {
    box-shadow: inset 0 0 0 3px var(--accent), 0 0 10px var(--accent);
  }

  & > img {
    width: 100%;
    height: 100%;
    object-fit: contain;
    transform-origin: center;
    image-rendering: high-quality;
    display: none;
    opacity: 0;
    transition-property: transform, opacity, display;
    transition-behavior: allow-discrete;

    &.loaded {
      opacity: 1;
      display: block;
    }

    @starting-style {
      &.loaded {
        opacity: 0;
      }
    }
  }

  &.image {
    > .overlay {
      position: absolute;
      inset: 0;
      padding: var(--spacing);
      background: linear-gradient(
        to bottom,
        transparent 0%,
        var(--overlay-bg) 100%
      );
      opacity: 0;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: flex-end;
      z-index: 2;

      > p {
        color: white;
        text-shadow: var(--text-shadow);
        font-size: var(--font-size);
        max-width: 90%;
        text-align: center;
        margin-bottom: var(--spacing);
      }

      svg {
        filter: drop-shadow(1px 1px 0.1px var(--text-primary));
      }
    }

    &:hover > .overlay,
    &.selected > .overlay,
    &.multi-selected > .overlay {
      opacity: 1;
    }

    > .spin-icon {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-size: 2rem;
      color: var(--text-primary);
      width: 2em;
      height: 2em;
      display: flex;
      align-items: center;
      justify-content: center;
      
      & > .icon {
        width: 1em;
        height: 1em;
        display: flex;
        align-items: center;
        justify-content: center;
        animation: rotate 1s linear infinite;
      }
    }
  }

  &.directory {
    aspect-ratio: var(--directory-aspect-ratio);
    width: 100%;
    margin: 0;
    border: 1px solid var(--border-color);
    padding: calc(var(--spacing) * 0.5);
    text-decoration: none;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    gap: calc(var(--spacing) * 0.5);
    color: var(--text-primary);
    font-weight: bold;
    transition: border-color 0.2s ease, background-color 0.2s ease, transform 0.2s ease, color 0.2s ease, opacity 0.2s ease, filter 0.2s ease;

    &.drag-target {
      outline: 4px solid var(--accent);
      outline-offset: -4px;
      z-index: 1;
    }

    /* Add strawberry theme-specific drag target styles */
    [data-theme="strawberry"] &.drag-target {
      outline: none;
      background-color: var(--accent);
      color: white;
      transition: background-color 0.4s ease, color 0.4s ease;

      svg {
        fill: white;
        transition: fill 0.4s ease;
      }
    }

    .icon {
      flex: 0 0 auto;
      margin: 0 var(--spacing);
    }

    & > span {
      flex: 1;
      min-width: 0;
      padding: 0;
      margin: 0;
      overflow-wrap: break-word;
    }

    & > svg {
      flex-shrink: 0;
    }

    &:hover {
      border-color: var(--border-secondary);
      background-color: var(--accent);
      transform: var(--hover-transform);
      color: var(--text-tertiary);

      svg {
        fill: var(--bg-color); /* FIXME: should not need this */
      }
    }
  }
}

.gallery-container {
  opacity: 1;
  transition-property: opacity;
}

.gallery-container.hidden {
  opacity: 0;
}

.upload-progress-overlay {
  position: absolute;
  inset: 0;
  pointer-events: none;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  background-color: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(2px);
}

.upload-progress-container {
  background: var(--bg-color);
  padding: var(--spacing);
  border-radius: var(--border-radius);
  width: 300px;
  box-shadow: var(--shadow);
  opacity: 0.9;
}

.upload-progress-bar {
  width: 100%;
  height: 4px;
  background: var(--border-color);
  border-radius: 2px;
  overflow: hidden;
  margin-bottom: var(--half-spacing);
}

.upload-progress-fill {
  height: 100%;
  background: var(--accent);
  transition: width 0.3s ease;
}

.upload-progress-text {
  text-align: right;
  font-size: 0.9em;
  color: var(--text-secondary);
}

.upload-current-file {
  margin-bottom: var(--half-spacing);
  font-size: 0.6em;
  font-family: monospace;
  color: var(--text-secondary);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.item.image.multi-selected {
  outline: 3px solid var(--accent);
  outline-offset: -3px;
}

.multi-select-indicator {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: var(--accent);
  color: var(--bg-color);
  border-radius: 50%;
  width: 50px;
  height: 50px;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1;
}

.multi-select-indicator .icon {
  font-size: 2rem;
}

.multi-select-actions {
  display: flex;
  gap: var(--spacing);
}

.multi-select-actions .delete-button {
  color: var(--error);
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: scale(0.98);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  20% { transform: translateX(-8px); }
  40% { transform: translateX(8px); }
  60% { transform: translateX(-8px); }
  80% { transform: translateX(8px); }
}

@keyframes flashRed {
  0%, 100% { background-color: transparent; }
  50% { background-color: rgba(255, 0, 0, 0.5); }
}

.move-failed {
  animation: shake 0.4s cubic-bezier(.36,.07,.19,.97) both, flashRed 0.4s ease-in-out;
  transform-origin: center;
  backface-visibility: hidden;
  perspective: 1000px;
  position: relative;
  z-index: 10;
  pointer-events: none;
}

/* Ensure animation plays on top of other effects */
.move-failed::after {
  content: '';
  position: absolute;
  inset: 0;
  background: transparent;
  z-index: 11;
  pointer-events: none;
  animation: flashRed 0.4s ease-in-out;
}

/* Add blur and darken effect for multiselected items */
.item.multi-selected {
  position: relative;
}

.item.multi-selected::before {
  content: '';
  position: absolute;
  inset: 0;
  background: rgba(0, 0, 0, 0.3);
  backdrop-filter: blur(2px) saturate(220%);
  z-index: 1;
  pointer-events: none;
}

/* Ensure the check icon stays above the blur overlay */
.item.multi-selected .multi-select-indicator {
  z-index: 2;
}

/* Adjust directory-specific multiselect styling */
.item.directory.multi-selected {
  background: rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(2px) saturate(220%);
}

.item.directory.multi-selected:hover {
  background: color-mix(in srgb, var(--accent) 85%, transparent);
}

/* Ensure text and icons remain visible in multiselected directories */
.item.directory.multi-selected > .directory-icon,
.item.directory.multi-selected > .directory-name {
  position: relative;
  z-index: 1;
}

/* Ensure the check icon stays above everything */
.item.directory .multi-select-indicator {
  z-index: 2;
}

/* Add blur and darken effect for multiselected items */
.item.directory.multi-selected::before {
  content: '';
  position: absolute;
  inset: 0;
  background: rgba(0, 0, 0, 0.3);
  backdrop-filter: blur(2px) saturate(220%);
  z-index: 1;
  pointer-events: none;
}

.modal-dialog .delete {
  background: var(--error);
  border-color: var(--error);
  color: white;
}

.modal-dialog .delete:hover {
  background: color-mix(in srgb, var(--error) 85%, black);
}

.modal-dialog p {
  margin: var(--spacing) 0;
  color: var(--text-secondary);
}

.modal-overlay {
  position: fixed;
  inset: 0;
  background: var(--overlay-bg);
  backdrop-filter: var(--overlay-backdrop);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1100;
}

.modal-dialog {
  background: var(--bg-color);
  border-radius: 8px;
  padding: var(--double-spacing);
  box-shadow: var(--shadow-default);
  max-width: 90%;
  width: 400px;
  min-width: 300px;
  position: relative;
}

.modal-dialog h2 {
  margin: 0 0 var(--spacing) 0;
  color: var(--text-primary);
}

.modal-dialog p {
  margin: var(--spacing) 0;
  color: var(--text-secondary);
}

.modal-dialog .delete {
  background: var(--error);
  border-color: var(--error);
  color: white;
}

.modal-dialog .delete:hover {
  background: color-mix(in srgb, var(--error) 85%, black);
}

/* Additional modal styles */
.modal-close-button {
  position: absolute;
  top: var(--half-spacing);
  right: var(--half-spacing);
  padding: var(--half-spacing);
  border: none;
  background: none;
  cursor: pointer;
  color: var(--text-secondary);
  transition: color 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}

.modal-close-button:hover {
  color: var(--accent);
}

.modal-dialog form {
  display: flex;
  flex-direction: column;
  gap: var(--spacing);
}

.modal-dialog input {
  width: 100%;
  padding: var(--half-spacing);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  background: var(--input-bg);
  color: var(--text-primary);
}

.modal-dialog input:focus {
  outline: none;
  border-color: var(--accent);
}

.modal-dialog .modal-actions {
  display: flex;
  justify-content: flex-end;
  gap: var(--spacing);
}

.modal-dialog button {
  padding: var(--half-spacing) var(--spacing);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  background: var(--button-bg);
  color: var(--text-primary);
  cursor: pointer;
}

.modal-dialog button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.modal-dialog button.primary {
  background: var(--accent);
  color: var(--text-on-accent);
  border-color: var(--accent);
}

.gallery {
  flex: 1;
  overflow: auto;
  padding: 1rem;
  position: relative;
}

.settings-overlay {
  position: fixed;
  inset: 0;
  background: var(--overlay-bg);
  backdrop-filter: var(--overlay-backdrop);
  z-index: 1000;
  display: flex;
  align-items: center;
  justify-content: center;
}

.settings-overlay:focus {
  outline: none;
}

/* When settings is open, prevent gallery interaction */
.gallery.settings-open {
  pointer-events: none;
  user-select: none;
}

/* Add styles for items being dragged */
.item.being-dragged {
  opacity: 0.6 !important;
  filter: grayscale(50%) !important;
}

/* Ensure the drag target outline is above other effects */
.item.directory.drag-target {
  z-index: 1;
}

[data-theme="strawberry"] .item.directory.selected {
  background-color: var(--accent);
}

[data-theme="strawberry"] .item.directory.selected svg {
  fill: white;
}

[data-theme="strawberry"] .item.directory.selected .directory-name {
  color: white;
}

.gallery-error {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  padding: 2rem;
  color: var(--error-text);
  font-size: 1.125rem;
}

.gallery-error .error-icon {
  width: 1.5rem;
  height: 1.5rem;
  color: var(--error);
}

.gallery-error .error-message {
  font-weight: 500;
}